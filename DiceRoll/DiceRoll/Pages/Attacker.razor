@using DiceRoll.ViewModels
@inherits AttackerBase

<div class="card mb-3">
    <div class="card-header">
        <div class="row">
            <div class="col-12 d-flex">
                <span class="text-button-align">
                    Attacker profile @ListDetail.Order
                </span>
                <div class="btn-group ms-auto" role="group" aria-label="Basic example">
                    <button class="btn btn-primary" type="button" @onclick="MoveUp_Click">
                        <span class="fa fa-arrow-up" aria-hidden="true"></span>
                    </button>
                    <button class="btn btn-primary" type="button" @onclick="MoveDown_Click">
                        <span class="fa fa-arrow-down" aria-hidden="true"></span>
                    </button>
                    <button class="btn btn-primary" type="button" @onclick="Duplicate_Click">
                        <span class="fa fa-copy" aria-hidden="true"></span>
                    </button>
                    <button class="btn btn-primary" type="button" @onclick="Delete_Click">
                        <span class="fa fa-trash-alt" aria-hidden="true"></span>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <ul class="list-group list-group-flush">
        @if (ListDetail.HitResult != null || ListDetail.WoundResult != null)
        {
            <li class="list-group-item">
                <div class="row">
                    <div class="col-12">
                        <p class="mb-2 text-info bg-dark rounded">@ListDetail.HitResult.ToString()</p>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <p class="mb-0 text-info bg-dark rounded">@ListDetail.WoundResult.ToString()</p>
                    </div>
                </div>
            </li>
        }
        <li class="list-group-item pb-0">
            <div class="row">
                <label for="@("quantityInput" + ComponentId)" class="col-4 col-sm-3 col-form-label">Quantity</label>
                <div class="col-8 col-8 col-sm-3 pb-2">
                    <InputNumber class="form-control" id="@("quantityInput" + ComponentId)" @bind-Value="ListDetail.Quantity" />
                </div>
            </div>
            <div class="row">
                <label for="@("attackSkillInput" + ComponentId)" class="col-4 col-sm-3 col-form-label">WS or BS</label>
                <div class="col-8 col-sm-3 pb-2">
                    <InputNumber class="form-control" id="@("attackSkillInput" + ComponentId)" @bind-Value="ListDetail.AttackSkill" />
                </div>
                <label for="@("woundCapInput" + ComponentId)" class="col-4 col-sm-3 col-form-label">Wound cap</label>
                <div class="col-8 col-sm-3 pb-2">
                    <InputNumber class="form-control" id="@("woundCapInput" + ComponentId)" @bind-Value="ListDetail.WoundCap" />
                </div>
            </div>
            <div class="row">
                <label for="@("apInput" + ComponentId)" class="col-4 col-sm-3 col-form-label">AP</label>
                <div class="col-8 col-sm-3 pb-2">
                    <InputNumber class="form-control" id="@("apInput" + ComponentId)" @bind-Value="ListDetail.AP" />
                </div>
                <label for="@("damagesInput" + ComponentId)" class="col-4 col-sm-3 col-form-label">Damages</label>
                <div class="col-8 col-sm-3 pb-2">
                    <InputNumber class="form-control" id="@("damagesInput" + ComponentId)" @bind-Value="ListDetail.Damages" />
                </div>
            </div>
        </li>
        <li class="list-group-item">
            <button class="col-12 btn" type="button" data-bs-toggle="collapse" data-bs-target="@("#optionsCollapse" + ComponentId)" aria-expanded="false" aria-controls="@("optionsCollapse" + ComponentId)">
                <span class="fa fa-arrow-alt-circle-down" aria-hidden="true"></span> Options
            </button>
            <div class="collapse" id="@("optionsCollapse" + ComponentId)">
                <div class="row">
                    <div class="col-12 col-sm-8">
                        <div class="row">
                            <div class="col-3">
                                <div class="form-check form-switch">
                                    <InputCheckbox class="form-check-input" role="switch" id="@("hitRerollInput" + ComponentId)" @bind-Value="ListDetail.HasHitReroll" />
                                    <label class="form-check-label" for="@("hitRerollInput" + ComponentId)">Hit reroll</label>
                                </div>
                            </div>
                            @if (ListDetail.HasHitReroll)
                            {
                                <div class="col-9 pb-2">
                                    <InputRadioGroup Name="@("HitRerollType" + ComponentId)" @bind-Value="ListDetail.HitReroll.RerollType">
                                        @foreach (var rerollType in (DataModels.RerollType[])Enum.GetValues(typeof(DataModels.RerollType)))
                                        {
                                        <div class="form-check">
                                            <InputRadio Name="@("HitRerollType" + ComponentId)" Value="rerollType" class="form-check-input" id="@("HitRerollType" + rerollType.ToString() + ComponentId)" />
                                            <label class="form-check-label" for="@("HitRerollType" + rerollType.ToString() + ComponentId)">@RerollTypeDisplayNamesDictionary[rerollType]</label>
                                        </div>
                                        }
                                </InputRadioGroup>
                                @if (ListDetail.HitReroll?.RerollType == DataModels.RerollType.SpecificValue)
                                    {
                                        <InputNumber class="form-control" id="@("hitRerollSpecificValueInput" + ComponentId)" @bind-Value="ListDetail.HitReroll.Value" placeholder="Specific value" />
                                    }
                                </div>
                            }
                        </div>
                        <div class="row">
                            <div class="col-3">
                                <div class="form-check form-switch">
                                    <InputCheckbox class="form-check-input" role="switch" id="@("woundRerollInput" + ComponentId)" @bind-Value="ListDetail.HasWoundReroll" />
                                    <label class="form-check-label" for="@("woundRerollInput" + ComponentId)">Wound reroll</label>
                                </div>
                            </div>
                            @if (ListDetail.HasWoundReroll)
                            {
                                <div class="col-9 pb-2">
                                    <InputRadioGroup Name="@("WoundRerollType" + ComponentId)" @bind-Value="ListDetail.WoundReroll.RerollType">
                                        @foreach (var rerollType in (DataModels.RerollType[])Enum.GetValues(typeof(DataModels.RerollType)))
                                        {
                                        <div class="form-check">
                                            <InputRadio Name="@("WoundRerollType" + ComponentId)" Value="rerollType" class="form-check-input" id="@("WoundRerollType" + rerollType.ToString() + ComponentId)" />
                                            <label class="form-check-label" for="@("WoundRerollType" + rerollType.ToString() + ComponentId)">@RerollTypeDisplayNamesDictionary[rerollType]</label>
                                        </div>
                                        }
                                </InputRadioGroup>
                                @if (ListDetail.WoundReroll?.RerollType == DataModels.RerollType.SpecificValue)
                                    {
                                        <InputNumber class="form-control" id="@("woundRerollSpecificValueInput" + ComponentId)" @bind-Value="ListDetail.WoundReroll.Value" placeholder="Specific value" />
                                    }
                                </div>
                            }
                        </div>
                    </div>
                    <div class="col-12 col-sm-4">
                        @foreach (var optionType in (DataModels.AttackerOptionType[])Enum.GetValues(typeof(DataModels.AttackerOptionType)))
                        {
                            <div class="form-check form-switch">
                                <InputCheckbox class="form-check-input" role="switch" id="@("optionType" + optionType.ToString() + ComponentId)" @bind-Value="ListDetail.OptionsDictionary[optionType].IsActive" />
                                <label class="form-check-label" for="@("optionType" + optionType.ToString() + ComponentId)">@AttackerOptionTypeDisplayNamesDictionary[optionType]</label>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </li>
    </ul>
</div>

@code {
}
